// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sum_matrixes_rcpp
Rcpp::NumericMatrix sum_matrixes_rcpp(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix C, int N);
RcppExport SEXP _rparallelcuda_sum_matrixes_rcpp(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_matrixes_rcpp(A, B, C, N));
    return rcpp_result_gen;
END_RCPP
}
// sum_matrixes_tbb_graph
Rcpp::NumericMatrix sum_matrixes_tbb_graph(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix C, int N);
RcppExport SEXP _rparallelcuda_sum_matrixes_tbb_graph(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_matrixes_tbb_graph(A, B, C, N));
    return rcpp_result_gen;
END_RCPP
}
// sum_matrixes_tbb_parallel
Rcpp::NumericMatrix sum_matrixes_tbb_parallel(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix C, int N);
RcppExport SEXP _rparallelcuda_sum_matrixes_tbb_parallel(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_matrixes_tbb_parallel(A, B, C, N));
    return rcpp_result_gen;
END_RCPP
}
// sum_matrixes_tbb_reduce
double sum_matrixes_tbb_reduce(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix C, Rcpp::NumericVector result, int N);
RcppExport SEXP _rparallelcuda_sum_matrixes_tbb_reduce(SEXP ASEXP, SEXP BSEXP, SEXP CSEXP, SEXP resultSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type C(CSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type result(resultSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_matrixes_tbb_reduce(A, B, C, result, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rparallelcuda_sum_matrixes_rcpp", (DL_FUNC) &_rparallelcuda_sum_matrixes_rcpp, 4},
    {"_rparallelcuda_sum_matrixes_tbb_graph", (DL_FUNC) &_rparallelcuda_sum_matrixes_tbb_graph, 4},
    {"_rparallelcuda_sum_matrixes_tbb_parallel", (DL_FUNC) &_rparallelcuda_sum_matrixes_tbb_parallel, 4},
    {"_rparallelcuda_sum_matrixes_tbb_reduce", (DL_FUNC) &_rparallelcuda_sum_matrixes_tbb_reduce, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_rparallelcuda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
