# Configuration for Google Colaboratory sheets
CXX_STD = CXX17
NVCC = /usr/local/cuda/bin/nvcc

# R related paths
R_HOME = /usr/lib/R
R_INC = -I/usr/share/R/include
R_LIB = -L$(R_HOME)/libs
R_FLAGS = $(R_INC) $(R_LIB)

# Paths for Rcpp
R_PKGS = /usr/local/lib/R/site-library
RCPP_HOME = $(R_PKGS)/Rcpp
RCPP_INC = -I$(RCPP_HOME)/include
RCPP_PARA = -L$(RCPP_HOME)/libs
RCPP_FLAGS=$(RCPP_PARA) $(RCPP_INC)

# Paths for RcppParallel
RCPP_PAR_HOME = $(R_PKGS)/RcppParallel
RCPP_PAR_LIB = -L$(RCPP_PAR_HOME)/libs
RCPP_PAR_INC = -I$(RCPP_PAR_HOME)/include
RCPP_PAR_FLAGS=$(RCPP_PAR_LIB) $(RCPP_PAR_INC)

# Define libraries for handling TBB
ONEAPI_INC=-I$(/usr/include/oneapi)/ 
ONEAPI_LIB=-L/usr/lib/x86_64-linux-gnu -ltbb -pthread
ONEAPI_FLAGS=$(ONEAPI_LIB) $(ONEAPI_INC)

# used compile cuda library
CUDA_HOME=/usr/local/cuda
CUDA_LIB=-L$(CUDA_HOME)/lib64 -lcudart
CUDA_INC=-I$(CUDA_HOME)/include $(R_INC) $(R_LIB) -I.
CUDA_ARCH=-O3 -arch=sm_70 -G -lR --shared -Xcompiler -fPIC 
CUDA_FLAGS=$(CUDA_LIB) $(CUDA_INC)

## Additional compilation flags
CPP_FLAGS = -fopenmp -fpic -g -O2 -flto -Wall -pedantic -fdiagnostics-color=always
LIB_FLAGS = -L$(RCPP_PARA)/lib -L$(RCPP_PARA)/libs -L$(TBB_LIB) -Wl,-R$(ONEAPI_HOME)/lib

# general compilation composed flags
CXX_FLAGS=$(CUDA_FLAGS) $(ONEAPI_FLAGS)
LINKING_FLAGS=-Wl,-R$(ONEAPI_HOME)/lib

## Library source and object files
cpp_sources = $(wildcard *.cpp)
cpp_objs := $(patsubst %.cpp, %.o, $(cpp_sources))
cu_sources = $(wildcard *.cu)
cu_objs := $(patsubst %.cu, %.o, $(cu_sources))

PKG_LIBS = $(R_FLAGS) $(ONEAPI_FLAGS) $(CUDA_FLAGS) $(LINKING_FLAGS) $(RCPP_FLAGS) $(RCPP_PAR_FLAGS)
OBJECTS = $(cu_objs) $(cpp_objs)

all: clean $(SHLIB)
$(SHLIB): $(OBJECTS)

clean:
	rm -f *.o $(SHLIB)

%.o: %.cpp $(cpp_sources)
	$(CXX) $< -c -fPIC $(R_INC) $(RCPP_INC) $(RCPP_PAR_INC) $(ONEAPI_FLAGS) -I.

%.o: %.cu $(cu_sources)
	$(NVCC) $(CUDA_FLAGS) $(CUDA_ARCH) $(RCPP_INC) $< -c -I. 
